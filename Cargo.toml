[package]
name = "project_name"
version = "0.1.0"
authors = ["Your name <your@em.ail>"]
edition = "2021"


[dependencies]
defmt = "^0.3.5"
defmt-rtt = "^0.4.0"

# todo: Update these versions and remove unused ones A/R.
#hal = { package = "esp32c3-hal", version = "^0.14.0", features = "defmt" }  # todo
hal = { package = "esp32c3-hal", version = "^0.14.0" } # todo
esp-backtrace = { version = "^0.9.0", features = ["esp32c3", "panic-handler", "exception-handler", "print-jtag-serial"] }

# todo: Sort out this vs defmt.
esp-println = { version = "^0.8.0", features = ["esp32c3"] }

# "When using USB-SERIAL-JTAG (for example by selecting jtag-serial in esp-println) you have to
# activate the feature phy-enable-usb."
# todo: "compile_error!("You may not enable both `defmt` and `log` features.");"
#esp-wifi  = { version = "^0.1.1", features = ["esp32c3", "wifi", "ble", "coex", "phy-enable-usb", "defmt"] }
esp-wifi  = { version = "^0.1.1", features = ["esp32c3", "wifi", "ble", "coex", "phy-enable-usb"] }
embedded-svc = { version = "^0.26.4", default-features = false, features = [] }
# todo: Smoltcp temp at 0.10 for espi-wifi compatibility.
#smoltcp = { version = "^0.11.0", default-features=false, features = ["proto-igmp", "proto-ipv4", "socket-tcp", "socket-icmp", "socket-udp", "medium-ethernet", "proto-dhcpv4", "socket-raw", "socket-dhcpv4"] }
smoltcp = { version = "0.10.0", default-features=false, features = ["proto-igmp", "proto-ipv4", "socket-tcp", "socket-icmp", "socket-udp", "medium-ethernet", "proto-dhcpv4", "socket-raw", "socket-dhcpv4"] }
#embedded-io = {  version = "^0.6.1", features = ["defmt"] }
embedded-io = "^0.6.1"
#heapless = { version = "0.8.0", default-features = false }
heapless = { version = "0.7.6", default-features = false }

# todo: Temp
[patch.crates-io]
esp-wifi = { git = "https://github.com/esp-rs/esp-wifi", rev = "a69545d" }


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-